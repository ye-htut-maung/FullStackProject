SELECT current_database();
-- Users table
CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    full_name VARCHAR(100),
    bio TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Posts table
CREATE TABLE posts (
    post_id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(user_id),
    content TEXT NOT NULL,
    likes_count INTEGER DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Likes table
CREATE TABLE likes (
    like_id SERIAL PRIMARY KEY,
    post_id INTEGER REFERENCES posts(post_id),
    user_id INTEGER REFERENCES users(user_id),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(post_id, user_id)
);

INSERT INTO users (username, email, password_hash, full_name, bio)
VALUES
('john_doe', 'john@example.com', 'hashed_password_1', 'John Doe', 'I love coding!'),
('jane_smith', 'jane@example.com', 'hashed_password_2', 'Jane Smith', 'Photography enthusiast');


-- Insert posts
INSERT INTO posts (user_id, content)
VALUES
(1, 'Hello, this is my first post!'),
(2, 'Check out this amazing sunset!');

-- Insert likes
INSERT INTO likes (post_id, user_id)
VALUES
(1, 2),  -- Jane likes John's post
(2, 1);  -- John likes Jane's post

-- Update like counts
UPDATE posts SET likes_count = likes_count + 1 WHERE post_id = 1;
UPDATE posts SET likes_count = likes_count + 1 WHERE post_id = 2;

SELECT * FROM users;
SELECT * FROM posts;
SELECT * FROM likes;